{"version":3,"sources":["components/layouts/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layouts/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layouts/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/CutText.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPostPage/AddPostPage.js","components/features/SinglePost/Post.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePostPage/SinglePostPage.js","components/features/RandomPost/RandomPost.js","components/features/RandomPost/RandomPostContainer.js","components/pages/RandomPostPage/RandomPostPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","START_REQUEST","END_REQUEST","ERROR_REQUEST","LOAD_SINGLE_POST","RESET_REQUEST","LOAD_POSTS_PAGE","LOAD_RANDOM_POST","startRequest","type","endRequest","errorRequest","error","resetRequest","loadPostsByPage","payload","initialState","data","singlePost","randomPost","pending","success","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","cutText","content","maxLength","length","cutContent","substr","indexOfLastSpace","lastIndexOf","finalContent","PostSummary","id","author","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","changePageUp","changePageDown","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","undefined","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","amountInfo","PostsPage","ContactPage","NotFoundPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPost","Post","SinglePost","renderLoader","renderPost","appId","href","renderInfo","renderError","loadSinglePost","loadSinglePostRequest","SinglePostPage","match","params","RandomPost","loadRandomPost","RandomPostPage","App","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c67dfbc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layouts/MainMenu/MainMenu';\r\nimport './NavBar.scss';\r\n\r\n// Link przekierowuje bez przeładowania strony\r\nclass NavBar extends React.Component {\r\nstate = {\r\n  links: [\r\n    {path: '/', title: 'Home'},\r\n    {path: '/posts/new', title: 'Add post'},\r\n    {path: '/posts/random', title: 'Random post'},\r\n    {path: '/posts', title: 'Posts'},\r\n    {path: '/contact', title: 'Contact'},\r\n  ]\r\n}\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({children}) => (\r\n  <div>\r\n    <PageContainer />\r\n      <NavBar />\r\n      {children}\r\n    <PageContainer />\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\r\nexport const BASE_URL = 'https://maciekreactblog.herokuapp.com';","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n//import { BASE_URL } from '../config';\r\n\r\n\r\n// SELECTORS\r\nexport const getPosts = ({posts}) => posts.data;\r\nexport const getPostsAmount = ({posts}) => posts.data.length;\r\nexport const getRequest = ({posts}) => posts.request;\r\nexport const getSinglePost = ({posts}) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getActualPage = ({posts}) => posts.presentPage;\r\nexport const getRandomPost = ({posts}) => posts.randomPost;\r\n\r\n// ACTIONS & CREATORS\r\n//action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\nexport const LOAD_RANDOM_POST = createActionName('LOAD_RANDOM_POST');\r\n\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const startRequest = () => ({type: START_REQUEST});\r\nexport const endRequest = () => ({type: END_REQUEST});\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const resetRequest = () => ({type: RESET_REQUEST});\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\nexport const loadRandomPost = payload => ({ payload, type: LOAD_RANDOM_POST });\r\n\r\n\r\n// INITIAL STATE\r\nconst initialState = {\r\n  data: [],\r\n  singlePost: null,\r\n  randomPost: null,\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  amount: 0,\r\n  postsPerPage: 10,\r\n  presentPage: 1,\r\n}\r\n\r\n// THUNKS\r\n// thunk must return function with dispatch as parameter\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/posts`);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    \r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = (id) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/posts/${id}`);\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    \r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n \r\nexport const addPostRequest = (post) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      await axios.post(`${API_URL}/posts`, post);\r\n      dispatch(endRequest());\r\n    \r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage = 2) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    }\r\n    catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadRandomPostRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${API_URL}/posts/random`);\r\n      dispatch(loadRandomPost(res.data));\r\n      dispatch(endRequest());\r\n    \r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\n// REDUCER\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      // new object with all statePart atributes and additional atribute data\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload};\r\n    case LOAD_RANDOM_POST:\r\n      return { ...statePart, randomPost: action.payload};\r\n    case LOAD_POSTS_PAGE:\r\n      // new object with amount and posts from server request; but postsPerPage and presentPage is prepared locally\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts],\r\n      };\r\n    case START_REQUEST:\r\n      // changing request.pending to true\r\n      return { ...statePart, request: { pending: true, error: null, success: null } };\r\n    case END_REQUEST:\r\n      // changing request.pending to false\r\n      return { ...statePart, request: { pending: false, error: null, success: true } };\r\n    case RESET_REQUEST:\r\n      // changing request.success to null\r\n      return { ...statePart, request: { pending: false, error: null, success: null } };\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n    default:\r\n      return statePart;\r\n  }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport {PropTypes} from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({children, ...otherProps}) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;\r\n\r\n","const cutText = (content, maxLength) => {\r\n  if (content.length < 1) {\r\n    return 'Error';\r\n  }\r\n  else if (content.length <= maxLength) {\r\n    return content;\r\n  }\r\n  else {\r\n    const additionalText = '...'\r\n    const cutContent = content.substr(0, maxLength - additionalText.length);\r\n    const indexOfLastSpace = cutContent.lastIndexOf(' ');\r\n    const finalContent = cutContent.substr(0, indexOfLastSpace)\r\n    const finalText = `${finalContent}${additionalText}`;\r\n    return finalText;\r\n  }\r\n};\r\n\r\nexport default cutText;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport './PostSummary.scss';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from './CutText';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PostSummary = ({id, title, author, content}) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <Button variant=\"primary\">\r\n      <Link to={`/posts/${id}`}>\r\n        Read more\r\n      </Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  content: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;\r\n\r\n\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Pagination.scss';\r\n\r\n\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  state = {\r\n    presentPage: this.props.initialPage || 1\r\n  }\r\n\r\n  changePage = (newPage) => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  };\r\n\r\n  changePageUp = () => {\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    changePage(presentPage + 1);\r\n  };\r\n\r\n  changePageDown = () => {\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    changePage(presentPage - 1);\r\n  };\r\n\r\n  render() {\r\n\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage, changePageUp, changePageDown } = this;\r\n\r\n    // [...Array(pages)] - create an array with no specified data but with number of elements equals to number of pages\r\n    // onClick={() => {changePage(page) }} - execute changePage function\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <ul className=\"pagination__list\">\r\n\r\n          {presentPage > 1 && (\r\n            <li className=\"pagination__list__item\" onClick={changePageDown}>\r\n              {'<'}\r\n            </li>\r\n          )}\r\n\r\n          {[...Array(pages)].map((el, page) =>{\r\n            return (\r\n              <li\r\n                key={++page}\r\n                onClick={() => {changePage(page) }}\r\n                className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n                {page}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {presentPage < pages && (\r\n            <li className=\"pagination__list__item\" onClick={changePageUp}>\r\n              {'>'}\r\n            </li>\r\n          )}\r\n\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage = 1, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage, postsPerPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, error, pages, presentPage, pagination } = this.props;\r\n    const { loadPostsPage } = this;\r\n\r\n    // let isPagination = () => pagination === undefined ? isPagination === true : isPagination === false;\r\n    \r\n    return (\r\n      <div>\r\n        {(request.pending === true || request.success === null) && <Spinner />}\r\n        {(request.pending === false && request.success === true && posts.length > 0) && <PostsList posts={posts} />}\r\n        {(request.pending === false && request.error !== null) && <Alert variant='error'> {error} </Alert>}\r\n        {(request.pending === false && request.success === true && posts.length === 0) && <Alert variant='info'> No posts </Alert>}\r\n        {pagination !== undefined && <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} />}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, resetRequest, getPages } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <PageTitle>Blog</PageTitle>\r\n    <Posts postsPerPage={3} />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { amount } = this.props;\r\n    const amountInfo = amount > 0 ? amount : '- no posts -';\r\n    return (\r\n      <div>Posts amount: {amountInfo} </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPostsAmount } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  amount: getPostsAmount(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts pagination={true}/>\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Kontakt</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.<br />\r\n      9432 Division Street<br />\r\n      Stone Mountain, GA 30083</p>\r\n    <p>Mobile Number: 207-914-3411</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n//import { connect } from 'react-redux';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  // the name of the atribute to change come from value of the name atribute\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value }});\r\n  }\r\n\r\n  handleEditor = (text) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text }});\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n  }\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={addPost}>\r\n        <TextField label=\"Title\" value={post.title} onChange={handleChange} name=\"title\" />\r\n        <TextField label=\"Author\" value={post.author} onChange={handleChange} name=\"author\" />\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n        <Button type=\"submit\" variant=\"primary\">Add post</Button>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPost = () => (\r\n  <PostForm />\r\n);\r\n\r\nexport default AddPost;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\n\r\nconst Post = ({id, title, author, content}) => (\r\n  <article className=\"post-summary\">\r\n    <SectionTitle>{title}</SectionTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{content}</HtmlBox>\r\n  </article>\r\n);\r\n\r\nPost.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  author: PropTypes.string,\r\n  content: PropTypes.string,\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Post from './Post';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { BASE_URL } from '../../../config';\r\n\r\n\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadSinglePost, id } = this.props;\r\n    loadSinglePost(id);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  renderLoader = (request) => ((request.pending === true || request.success === null) && <Spinner />);\r\n\r\n  renderPost = (request, post, location) => ((request.pending === false && request.success === true && post !== undefined && post !== null) && (\r\n    <>\r\n      <Post title={post.title} author={post.author} content={post.content}/>\r\n      <FacebookProvider appId=\"909115412938215\">\r\n        <ShareButton href={`${BASE_URL}${location.pathname}`}>Share</ShareButton>\r\n        <Comments href={`${BASE_URL}${location.pathname}`} />\r\n      </FacebookProvider>\r\n    </>\r\n  ));\r\n\r\n  renderInfo = (request, post) => ((request.pending === false && request.success === true && (post === undefined || post === null)) && <Alert variant={'error'}> Post o takim id nie istnieje! </Alert>);\r\n\r\n  renderError = (request) => ((request.pending === false && request.error !== null) && <Alert variant={'error'}> {this.props.request.error} </Alert>);\r\n\r\n\r\n  render() {\r\n    const { post, request, location} = this.props;\r\n\r\n    const renderLoader = this.renderLoader(request);\r\n\r\n    const renderPost = this.renderPost(request, post, location);\r\n\r\n    const renderInfo = this.renderInfo(request, post);\r\n\r\n    const renderError = this.renderError(request);\r\n\r\n    return (\r\n      <div>\r\n        {renderLoader}\r\n        {renderPost}\r\n        {renderInfo}\r\n        {renderError}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadSinglePost: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);\r\n","import { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, loadSinglePostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  post: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\nconst SinglePostPage = ({match}) => (\r\n  <div>\r\n    <SinglePost id={match.params.id} />\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Post from '../SinglePost/Post';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport NotFound from '../../pages/NotFound/NotFoundPage';\r\n\r\nclass RandomPost extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadRandomPost } = this.props;\r\n    loadRandomPost();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n \r\n  render() {\r\n    const { randomPost, request } = this.props;\r\n    return (\r\n      <div>\r\n        {(request.pending && <Spinner />) || (randomPost && <Post title={randomPost.title} author={randomPost.author} content={randomPost.content} />) || (\r\n          <NotFound />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRandomPost.propTypes = {\r\n  loadRandomPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RandomPost;","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport { getRandomPost, loadRandomPostRequest, getRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport RandomPost from './RandomPost';\r\n\r\nconst mapStateToProps = state => ({\r\n  randomPost: getRandomPost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadRandomPost: () => dispatch(loadRandomPostRequest()),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RandomPost));\r\n\r\n","import React from 'react';\r\nimport RandomPost from '../../features/RandomPost/RandomPostContainer';\r\n\r\nconst RandomPostPage = ({match}) => (\r\n  <div>\r\n    <RandomPost />\r\n  </div>\r\n);\r\n\r\nexport default RandomPostPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport MainLayout from './components/layouts/MainLayout/MainLayout';\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\nimport AddPost from './components/pages/AddPostPage/AddPostPage';\r\nimport SinglePost from './components/pages/SinglePostPage/SinglePostPage';\r\nimport RandomPost from './components/pages/RandomPostPage/RandomPostPage';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  // exact wymusza renderowanie tylko gdy scieżka jest identyczna z podaną w linku\r\n  // Switch zapewnia, że tylko jeden route zostanie zwrócony\r\n  render() {\r\n    return (\r\n     <MainLayout>\r\n       <Switch>\r\n         <Route path='/' exact component={Home} />\r\n         <Route path='/posts' exact component={Posts} />\r\n         <Route path='/contact' exact component={Contact} />\r\n         <Route path='/posts/new' exact component={AddPost} />\r\n         <Route path='/posts/random' exact component={RandomPost} />\r\n         <Route path='/posts/:id' component={SinglePost} />\r\n         <Route component={NotFound} />\r\n       </Switch>\r\n     </MainLayout>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport posts from './postsRedux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}